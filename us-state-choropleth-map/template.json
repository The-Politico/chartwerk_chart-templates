{
    "axes": {
        "base": {
            "dateFormat": null,
            "format": {
                "double": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 1,
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "dateString": "Y",
                    "frequency": 2,
                    "ticks": 7
                }
            },
            "label": "",
            "max": null,
            "min": null,
            "prefix": "",
            "shadedRegions": [],
            "suffix": "",
            "type": "categorical"
        },
        "color": {
            "byFacet": false,
            "domain": [
                17.82,
                25.05,
                32.27
            ],
            "ignoreScale": false,
            "quantize": true,
            "quantizeProps": {
                "column": "value",
                "groups": 4,
                "reverseColors": true
            },
            "range": [
                "#e5e8f6",
                "#afbbe3",
                "#7791d1",
                "#2b6abd"
            ],
            "scheme": "sequential.democrat"
        },
        "scale": {
            "prefix": "",
            "suffix": ""
        },
        "value": {
            "format": {
                "double": {
                    "customTicks": [],
                    "ticks": 7
                },
                "single": {
                    "customTicks": [],
                    "ticks": 7
                }
            },
            "label": "",
            "max": null,
            "min": null,
            "prefix": "$",
            "shadedRegions": [],
            "suffix": ""
        }
    },
    "data": [
        {
            "state": "Alabama",
            "value": 32
        },
        {
            "state": "Alaska",
            "value": 27.8
        },
        {
            "state": "Arizona",
            "value": 29.9
        },
        {
            "state": "Arkansas",
            "value": 39.5
        },
        {
            "state": "California",
            "value": 21.1
        },
        {
            "state": "Colorado",
            "value": 20.3
        },
        {
            "state": "Connecticut",
            "value": 11.5
        },
        {
            "state": "Delaware",
            "value": 20.7
        },
        {
            "state": "District of Columbia",
            "value": 28.4
        },
        {
            "state": "Florida",
            "value": 22.5
        },
        {
            "state": "Georgia",
            "value": 28.4
        },
        {
            "state": "Hawaii",
            "value": 23.1
        },
        {
            "state": "Idaho",
            "value": 23.2
        },
        {
            "state": "Illinois",
            "value": 22.8
        },
        {
            "state": "Indiana",
            "value": 28
        },
        {
            "state": "Iowa",
            "value": 19.8
        },
        {
            "state": "Kansas",
            "value": 27.6
        },
        {
            "state": "Kentucky",
            "value": 35.3
        },
        {
            "state": "Louisiana",
            "value": 35.8
        },
        {
            "state": "Maine",
            "value": 16.5
        },
        {
            "state": "Maryland",
            "value": 17.8
        },
        {
            "state": "Massachusetts",
            "value": 10.6
        },
        {
            "state": "Michigan",
            "value": 21.1
        },
        {
            "state": "Minnesota",
            "value": 15.5
        },
        {
            "state": "Mississippi",
            "value": 38
        },
        {
            "state": "Missouri",
            "value": 27.2
        },
        {
            "state": "Montana",
            "value": 26.4
        },
        {
            "state": "Nebraska",
            "value": 22.2
        },
        {
            "state": "Nevada",
            "value": 28.5
        },
        {
            "state": "New Hampshire",
            "value": 11
        },
        {
            "state": "New Jersey",
            "value": 13.1
        },
        {
            "state": "New Mexico",
            "value": 37.8
        },
        {
            "state": "New York",
            "value": 16.1
        },
        {
            "state": "North Carolina",
            "value": 25.9
        },
        {
            "state": "North Dakota",
            "value": 23.9
        },
        {
            "state": "Ohio",
            "value": 25.1
        },
        {
            "state": "Oklahoma",
            "value": 38.5
        },
        {
            "state": "Oregon",
            "value": 20
        },
        {
            "state": "Pennsylvania",
            "value": 19.3
        },
        {
            "state": "Rhode Island",
            "value": 15.8
        },
        {
            "state": "South Carolina",
            "value": 28.5
        },
        {
            "state": "South Dakota",
            "value": 26.2
        },
        {
            "state": "Tennessee",
            "value": 33
        },
        {
            "state": "Texas",
            "value": 37.8
        },
        {
            "state": "Utah",
            "value": 19.4
        },
        {
            "state": "Vermont",
            "value": 14.2
        },
        {
            "state": "Virginia",
            "value": 18.4
        },
        {
            "state": "Washington",
            "value": 19.1
        },
        {
            "state": "West Virginia",
            "value": 36.6
        },
        {
            "state": "Wisconsin",
            "value": 18
        },
        {
            "state": "Wyoming",
            "value": 30.1
        }
    ],
    "datamap": {
        "base": "state",
        "custom": {},
        "facet": null,
        "ignore": [],
        "scale": "value",
        "series": [],
        "sort": [
            "state",
            "value"
        ],
        "value": null
    },
    "embed": {
        "dimensions": {
            "double": {
                "height": 491.59088134765625,
                "width": 560
            },
            "single": {
                "height": 361.6903381347656,
                "width": 290
            }
        }
    },
    "margins": {
        "double": {
            "bottom": 0.050000000000000044,
            "left": 0.05,
            "right": 0.050000000000000044,
            "top": 0.05
        },
        "single": {
            "bottom": 0.050000000000000044,
            "left": 0.05,
            "right": 0.050000000000000044,
            "top": 0.05
        }
    },
    "scripts": {
        "dependencies": {
            "scripts": [
                "https://cdnjs.cloudflare.com/ajax/libs/d3/4.2.3/d3.min.js",
                "https://cdnjs.cloudflare.com/ajax/libs/topojson/1.6.20/topojson.min.js"
            ],
            "styles": []
        },
        "draw": "function draw(){\n    var initialProps = {\n        dims: {\n          single: { width: 270, height: 205 },\n          double: { width: 580, height: 370}\n        },\n    };\n    \n    var werk = werkHelper.build(initialProps);\n\t\n\tvar comma = d3.format(\",\");\n\n    var map = d3.map(werk.data, function(d){ return d.state; }),\n        path = d3.geoPath(),\n        postal = werk.data[0].state.length === 2; // If state label is a postal code\n\t\n\tvar svg = d3.select(\"#chart\").append(\"svg\")\n      .style(\"background-color\",\"transparent\")\n        .attr(\"width\", werk.dims.svg.width + werk.dims.margins.left + werk.dims.margins.right)\n        .attr(\"height\", werk.dims.svg.height + werk.dims.margins.top + werk.dims.margins.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + werk.dims.margins.left + \",\" + werk.dims.margins.top + \")\");\n    \n    var projection = d3.geoAlbersUsa()\n        // Scale for different sizes\n        .scale(chartwerk.ui.size === 'double' ? 720 : 350);\n\n    function getState(d){\n        return postal ? map.get(d.properties.ABBREVIATION) : map.get(d.properties.NAME);\n    }\n\n    d3.json(\"//interactives.dallasnews.com/common/data/geo/us-states.json\", function(error, us_states){\n\n        var states = svg.append(\"g\")\n            .attr(\"id\", \"states\")\n            // Have to recenter, probably because this map originally had Puerto Rico in it...\n            .attr(\"transform\", chartwerk.ui.size === 'double' ? \"translate(-220, -90)\" : \"translate(-360, -160)\")\n            .selectAll(\"path\")\n            .data(topojson.feature(us_states, us_states.objects.us_states).features)\n            .enter().append(\"path\")\n            .attr('d', d3.geoPath().projection(projection))\n            .attr(\"class\", \"state\")\n            .style('fill', function(d){\n                if (getState(d) && getState(d).value !== '') {\n                    return werk.scales.color(getState(d).value);\n                }\n                return '#e2e2e2';\n            })\n            .style(\"stroke\", \"#fff\")\n            .on(\"mouseover\",function(d){\n                \n                if (getState(d) && getState(d).value !== '') {\n                    d3.select(this)\n                      .style(\"stroke\", \"black\")\n                      .moveToFront();\n                  \n                    d3.select(\".tooltip .title\")\n                      .text(d.properties.NAME);\n                  \n                    d3.select(\".tooltip .value\")\n                      .text(function(){\n                          var s = chartwerk.axes.scale;\n                          var data = getState(d);\n                          if (data || data.value !== '') {\n                              if (data.tooltip){\n                                  return data.tooltip;\n                              } else {\n                                  return chartwerk.axes.color.quantize ? \n                                    s.prefix + comma(data.value) + s.suffix : data.value;\n                              }\n                          }\n                      });\n                      \n                    var p = d3.mouse(this.parentElement.parentElement);\n                    \n                    d3.select(\".tooltip\")\n                        .style(\"opacity\", 1)\n                        .style(\"top\",function(){\n                            return p[1].toString() + \"px\";\n                        })\n                        .style(\"left\", function(){\n                            // We position either left or right of the mouse point based\n                            // on whether we're past the midpoint of the chart. This protects\n                            // against tooltips overflowing embedded iframes.\n                            var s = chartwerk.ui.size,\n                                w = werk.dims[s].width,\n                                tipW = parseInt(d3.select(\".tooltip\").style(\"width\"), 10),\n                                pos = p[0] > (w / 2) ?\n                                    p[0] - (tipW - 10) : p[0] + 40;\n                            return pos.toString() + \"px\";\n                        });\n                }\n            })\n            .on(\"mouseout\",function(){\n                d3.select(this)\n                  .style(\"stroke\",\"#fff\")\n                  .style('fill', function(d){ \n                    if (getState(d) && getState(d).value !== '') {\n                        return werk.scales.color(getState(d).value);\n                    }\n                    return '#e2e2e2';\n                });\n                d3.select(\".tooltip\")\n                    .style(\"opacity\", 0);\n            });\n    });\n    \n    var tooltip = d3.select(\"#chart\")\n      .append(\"div\")\n        .attr(\"class\",\"tooltip\")\n        .style(\"position\",\"absolute\");\n    tooltip\n      .append(\"div\")\n      .attr(\"class\",\"title\")\n      .text(chartwerk.datamap.scale);\n    tooltip\n      .append(\"div\")\n      .attr(\"class\",\"value\");\n}",
        "helper": "var werkHelper = {\n    prototype: function() {\n        d3.selection.prototype.moveToFront = function() {\n          return this.each(function(){\n            this.parentNode.appendChild(this);\n          });\n        };\n    },\n    \n    parse: function(werk){\n        werk.data = chartwerk.data.map(function(d){\n            return {\n                state: d[chartwerk.datamap.base],\n                value: d[chartwerk.datamap.scale],\n                // value: chartwerk.axes.color.quantize ? \n                //     +d[chartwerk.datamap.scale] : d[chartwerk.datamap.scale],\n                tooltip: chartwerk.datamap.custom.tooltip !== '' ?\n                    d[chartwerk.datamap.custom.tooltip] : null,\n            };\n        });\n    },\n    \n    dims: function(werk){\n        var s = chartwerk.ui.size;\n            w = werk.dims[s].width,\n            h = werk.dims[s].height,\n            margins = {\n                right: chartwerk.margins[s].right * w,\n                left: chartwerk.margins[s].left * w,\n                top: chartwerk.margins[s].top * h,\n                bottom: chartwerk.margins[s].bottom * h\n            },\n            svg = {\n                width: w - margins.left - margins.right,\n                height: h - margins.top - margins.bottom\n            };\n        \n        werk.dims.margins = margins;\n        werk.dims.svg = svg;\n    },\n\n    scales: function(werk){\n        var svg = werk.dims.svg;\n        werk.scales = {\n            color: chartwerk.axes.color.quantize ? \n                d3.scaleThreshold() : d3.scaleOrdinal(),\n        };\n        \n        werk.scales.color\n            .domain(chartwerk.axes.color.domain)\n            .range(chartwerk.axes.color.range);\n    },\n\n    // Build dims, scales and axes.\n    build: function(werk){\n        this.prototype();\n        this.parse(werk);\n        this.dims(werk);\n        this.scales(werk);\n        return werk;\n    },\n};\n\n",
        "html": "<div id='chart-header'>\n\t<h2 id='headline'></h2>\n\t<div id='chatter'></div> \n</div> \n<div id='chart-ui'>\n\t<!--You can put any necessary buttons, etc., here.-->\n</div>\n<div id='chart-legend'></div>\n<div id='chart'></div> \n<div id='chart-footer'> \n\t<div id='footnote'></div> \n\t<div id='source'></div> \n\t<div id='author'></div> \n</div>",
        "styles": "#chartwerk {\n    font-family: 'din-2014', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    width:560px;\n    padding: 20px 0;\n}\n\n#chartwerk {\n    background: inherit;\n}\n\n#chartwerk.single{\n    width:270px;\n    float:left;\n    overflow:hidden;\n    margin:10px 30px 10px 0;\n}\n\n#chartwerk strong{\n    font-weight: 600;\n}\n\n#chartwerk #chart-header{\n    line-height: 1.45em;\n    font-weight: 400;\n}\n\n#chartwerk.single{\n    width:290px;\n    float:left;\n    overflow:hidden;\n    margin:10px 30px 10px 0;\n}\n#chartwerk #headline { \n    font-weight:bold;\n    font-size:25px;\n    line-height: 1.05em;\n    margin: 0px;\n}\n#chartwerk #chatter {\n    margin: 6px 0px 12px;\n    font-size: 18px;\n    line-height: 24px;\n}\n#chartwerk #footnote,\n#chartwerk #source,\n#chartwerk #author {\n    font-size:12px;\n    font-weight: 400;\n    color:#666;\n    display: inline-block;\n\n}\n#chartwerk #author {\n    text-align:right;\n}\n\n#chartwerk #chart-footer #source{\n    vertical-align: text-top;\n    max-width: 350px;\n}\n\n#chartwerk.single #chart-footer #source{\n    font-size: 10px;\n}\n\n#chartwerk.single #chart-footer #author{\n    font-size: 10px;\n    float: left;\n}\n\n\n\n#chartwerk.single #footnote,\n#chartwerk.single #source,\n#chartwerk.single #author {\n    display: block;\n}\n\n#chartwerk #chart-footer {\n    margin-top: 6px;\n}\n\n#chartwerk.single #chart-footer {\n    margin-top: 2px;\n}\n\n#chartwerk.single #headline { \n    font-size:22px;\n}\n\n#chartwerk.single #chatter {\n    margin: 8px 0px 10px;\n    font-size: 14px;\n    line-height: 1.2em;\n}\n\n#chartwerk.single #chart-header #headline{\n    line-height: 1em;\n}\n\n#chartwerk #chart-legend \n.chart-legend-container .key-label{\n    font-size: 11px;\n    margin-left: -3px;\n}\n\n#chartwerk #chart path.line{\n    fill: none;\n    stroke-width: 2px;\n}\n\n#chartwerk #chart-legend{\n    margin-top:10px;\n}\n\n#chartwerk #chart-legend \n.chart-legend-container .key-color{\n    margin-right:2px;\n    margin-top: 2px;\n    width: 10px;\n    height: 10px;\n}\n\n#chartwerk #chart path.state{\n    stroke-width: 0.5px;\n    cursor:crosshair;\n}\n\n#chartwerk #chart{\n    position:relative;\n}\n\n#chartwerk #chart .tooltip{\n    opacity:0;\n    pointer-events:none;\n    padding:5px;\n    width:auto;\n    max-width: 200px;\n    line-height: 1.15em;\n    background:rgb(255,255,255);\n}\n\n#chartwerk.single #chart .tooltip{\n    font-size: 0.8em;\n    opacity:0;\n    pointer-events:none;\n    padding:5px;\n    width:auto;\n    max-width: 100px;\n    line-height: 1em;\n    background:rgb(255,255,255);\n}\n\n#chartwerk #chart .tooltip .title{\n    font-weight: bold;\n    fill:grey;\n}\n\n#chartwerk #chart .tooltip .value{\n    font-weight: normal;\n}\n\n\n#chartwerk .annotation .inner p{\n    font-size: 14px;\n    line-height: 1.2em;\n}\n\n#chartwerk .annotation .inner{\n    margin: 0px;\n}\n\n #chartwerk .annotation p{\n    font-family: inherit;\n    font-weight: 400;\n    text-shadow: -1px -1px 0 rgba(255,255,255,0.15), -1px 1px 0 rgba(255,255,255,0.15), 1px -1px 0 rgba(255,255,255,0.15), 1px 1px 0 rgba(255,255,255,0.15), -1px -1px 0 rgba(255,255,255,0.15), -1px 1px 0 rgba(255,255,255,0.15), 1px -1px 0 rgba(255,255,255,0.15), 1px 1px 0 rgba(255,255,255,0.15), -1px -1px 0 rgba(255,255,255,0.15), -1px 1px 0 rgba(255,255,255,0.15), 1px -1px 0 rgba(255,255,255,0.15), 1px 1px 0 rgba(255,255,255,0.15), -1px -1px 0 rgba(255,255,255,0.15), -1px 1px 0 rgba(255,255,255,0.15), 1px -1px 0 rgba(255,255,255,0.15), 1px 1px 0 rgba(255,255,255,0.15), -1px -1px 0 rgba(255,255,255,0.15), -1px 1px 0 rgba(255,255,255,0.15), 1px -1px 0 rgba(255,255,255,0.15), 1px 1px 0 rgba(255,255,255,0.15);\n} \n\n#chartwerk #chart-footer #author{\n    float: right;\n}\n\n#chartwerk .annotation.bg{\n    background: transparent;\n}"
    },
    "template": {
        "description": "Use this map if you want to compare states.\n\nYour data must include a column of state names, either as full text, like \"Texas,\" or as postal abbreviations, like \"TX.\" This column should be classified as a \"Base axis.\"\n\nYou should classify your value column as a \"Scale column\" on the data tab.",
        "icon": null,
        "id": "us-state-choropleth-map",
        "tags": [],
        "title": "US state choropleth map"
    },
    "text": {
        "annotations": [],
        "author": "Sarah Frostenson / POLITICO",
        "chatter": "Where you can \u2014 and can't \u2014 smoke the reefer.",
        "footnote": "",
        "headline": "The United States of Marijuana",
        "legend": {
            "active": true,
            "double": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 10,
                    "y": 10
                },
                "width": 500
            },
            "keys": [
                {
                    "color": "#e5e8f6",
                    "text": "10.6"
                },
                {
                    "color": "#afbbe3",
                    "text": "17.82"
                },
                {
                    "color": "#7791d1",
                    "text": "25.05"
                },
                {
                    "color": "#2b6abd",
                    "text": "32.27"
                }
            ],
            "single": {
                "align": "l",
                "background": true,
                "inside": false,
                "position": {
                    "x": 10,
                    "y": 10
                },
                "width": 250
            },
            "title": ""
        },
        "source": "Source: National Organization for the Reform of Marijuana Laws",
        "title": ""
    },
    "ui": {
        "datamap": [
            {
                "alias": "State",
                "available": true,
                "class": "base"
            },
            {
                "alias": "value axis",
                "available": false,
                "class": "value"
            },
            {
                "alias": "Color value",
                "available": true,
                "class": "scale"
            },
            {
                "alias": "data series",
                "available": false,
                "class": "series"
            },
            {
                "alias": "faceting column",
                "available": false,
                "class": "facet"
            },
            {
                "alias": "ignored column",
                "available": false,
                "class": "ignore"
            },
            {
                "alias": "Tooltip",
                "available": true,
                "class": "tooltip"
            }
        ],
        "rawData": "state\tvalue\nAlabama\t32.0\nAlaska\t27.8\nArizona\t29.9\nArkansas\t39.5\nCalifornia\t21.1\nColorado\t20.3\nConnecticut\t11.5\nDelaware\t20.7\nDistrict of Columbia\t28.4\nFlorida\t22.5\nGeorgia\t28.4\nHawaii\t23.1\nIdaho\t23.2\nIllinois\t22.8\nIndiana\t28.0\nIowa\t19.8\nKansas\t27.6\nKentucky\t35.3\nLouisiana\t35.8\nMaine\t16.5\nMaryland\t17.8\nMassachusetts\t10.6\nMichigan\t21.1\nMinnesota\t15.5\nMississippi\t38.0\nMissouri\t27.2\nMontana\t26.4\nNebraska\t22.2\nNevada\t28.5\nNew Hampshire\t11.0\nNew Jersey\t13.1\nNew Mexico\t37.8\nNew York\t16.1\nNorth Carolina\t25.9\nNorth Dakota\t23.9\nOhio\t25.1\nOklahoma\t38.5\nOregon\t20.0\nPennsylvania\t19.3\nRhode Island\t15.8\nSouth Carolina\t28.5\nSouth Dakota\t26.2\nTennessee\t33.0\nTexas\t37.8\nUtah\t19.4\nVermont\t14.2\nVirginia\t18.4\nWashington\t19.1\nWest Virginia\t36.6\nWisconsin\t18.0\nWyoming\t30.1",
        "size": "double"
    }
}